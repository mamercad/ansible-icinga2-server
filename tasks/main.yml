---
# tasks file for ansible-icinga2

- name: selinux permissive
  selinux: policy=targeted state=permissive

- name: enable firewalld
  service: name=firewalld state=started enabled=yes

- name: install python-pip (for firewall)
  yum: name=python-pip state=present

- name: pip install firewall
  pip: name=firewall

- name: let http through firewalld
  firewalld: service=http permanent=true immediate=yes state=enabled

- name: deploy /root/.my.cnf
  template: src=root.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: deploy ICINGA-release.repo
  copy: src=ICINGA-release.repo dest=/etc/yum.repos.d/ICINGA-release.repo

- name: import ICINGA GPG KEY
  rpm_key: key=http://packages.icinga.org/icinga.key state=present

- name: install icinga2
  yum: name=icinga2 state=present

- name: install EPEL repo
  yum: name=epel-release.noarch state=present

- name: start and enable icinga2
  service: name=icinga2 state=started enabled=yes

- name: install mariadb and mariadb-server
  yum: name={{ item }} state=present
  with_items:
    - mariadb
    - mariadb-server

- name: start and enable mariadb
  service: name=mariadb state=started enabled=yes

- name: install icinga2-ido-mysql
  yum: name=icinga2-ido-mysql state=present

- name: deploy /etc/icinga2/features-available/ido-mysql.conf
  template: src=ido-mysql.conf.j2 dest=/etc/icinga2/features-available/ido-mysql.conf owner=icinga group=icinga mode=0640
  notify: restart-icinga2

- name: install MySQL-python
  yum: name=MySQL-python state=present

- name: set the mysql root password
  mysql_user: check_implicit_admin=yes  name=root password={{ mysql_root_password }}

- name: create icinga database
  mysql_db: name=icinga state=present

- name: create icingaweb2 director user
  mysql_user: name=icinga password=icinga priv=icinga.*:ALL,GRANT

- name: crudely check if icinga database schema imported
  stat: path=/var/lib/mysql/icinga/icinga_acknowledgements.frm
  register: icinga_schema

- name: import icinga database schema
  mysql_db: state=import name=icinga target=/usr/share/icinga2-ido-mysql/schema/mysql.sql
  when: not icinga_schema.stat.exists

- name: check if ido-mysql feature enabled
  stat: path=/etc/icinga2/features-enabled/ido-mysql.conf
  register: ido_mysql_enabled
  changed_when: false

- name: icinga2 feature enable ido-mysql
  shell: icinga2 feature enable ido-mysql
  notify: restart-icinga2
  when: not ido_mysql_enabled.stat.exists

- name: install httpd
  yum: name={{ item }} state=present
  with_items:
    - httpd
    - php
    - icingaweb2
    - icingacli
    - nagios-plugins-all
    - git
    - python-pip

- name: start and enable httpd
  service: name=httpd state=started enabled=yes

- name: check if ido-mysql feature enabled
  stat: path=/etc/icinga2/features-enabled/command.conf
  register: command_enabled
  changed_when: false

- name: icinga2 feature enable command
  shell: icinga2 feature enable command
  notify: restart-icinga2
  when: not command_enabled.stat.exists

- name: usermod -a -G icingacmd apache
  user: name=apache groups=icingacmd append=yes

- name: fixup php.ini (date.timezone)
  replace: dest=/etc/php.ini regexp='^;date.timezone =$' replace="date.timezone = {{ php_timezone }}" backup=yes
  notify: restart-httpd

- name: create icingaweb2 group
  group: name=icingaweb2 state=present

- name: usermod -a -G icingaweb2 apache
  user: name=apache groups=icingaweb2 append=yes

- name: install php-ldap
  yum: name=php-ldap state=present
  notify: restart-httpd

- name: create icingaweb2 database
  mysql_db: name=icingaweb2 state=present

- name: create icingaweb2 director database
  mysql_db: name=director state=present

- name: create icingaweb2 director user
  mysql_user: name=director password=director priv=director.*:ALL,GRANT

- name: create icingaweb2  user
  mysql_user: name=icingaweb2 password=icingaweb2 priv=icingaweb2.*:ALL,GRANT

- name: crudely check if icingaweb2 database schema imported
  stat: path=/var/lib/mysql/icingaweb2/icingaweb_group.frm
  register: icingaweb2_schema

- name: import icingaweb2 database schema
  mysql_db: state=import name=icingaweb2 target=/usr/share/doc/icingaweb2/schema/mysql.schema.sql
  when: not icingaweb2_schema.stat.exists

- name: check if icingaweb admin user exists
  command: >
    mysql --user=icingaweb2 --password=icingaweb2 icingaweb2
    --execute="SELECT * FROM icingaweb_user WHERE name='icingaadmin' AND active=1 AND password_hash='{{ icingaadmin_hash }}';"
  register: check_icingaweb_admin

- name: Add icingaweb admin user
  command: >
    mysql --user=icingaweb2 --password=icingaweb2 icingaweb2
    --execute="INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '{{ icingaadmin_hash }}');"
  when: check_icingaweb_admin.stdout == ''

- name: copy icingaweb2 config
  copy: src=files/icingaweb2/{{ item }} dest=/etc/icingaweb2/
  with_items:
    - resources.ini
    - config.ini
    - authentication.ini
    - roles.ini

- name: copy icingaweb2 monitorring modul config
  copy: src=files/icingaweb2/monitoring/{{ item }} dest=/etc/icingaweb2/modules/monitoring/ owner=apache group=icingaweb2
  with_items:
    - config.ini
    - backends.ini
    - commandtransports.ini

- name: deploy icingaweb2 director
  git: dest=/usr/share/icingaweb2/modules/director/ repo=https://github.com/Icinga/icingaweb2-module-director.git

- name: copy icingaweb2 director modul config
  copy: src=files/icingaweb2/director/{{ item }} dest=/etc/icingaweb2/modules/director/
  with_items:
    - config.ini
    - kikstarter.ini

- name: install requirements for expect
  pip: name=pexpect state=present

- expect:
    command: icinga2 node wizard
    responses:
      'Please specify if this is a satellite setup ': 'n'
      'Please specifiy the common name': 'localhost'
      'Bind Host': ''
      'Bind Port': ''
    echo: yes


# - name: deploy icingaweb2 director shema
#   command: icingacli director migration pending

- name: restart services
  service: name={{ item }} state=restarted
  with_items:
    - icinga2
    - httpd


- name: deploy icingaweb2 director shema
  command: icingacli director migration run

- name: deploy icingaweb2 director shema
  command: icingacli director kickstart run
